@font-face {
  font-family: 'Gibson SemiBold';
  src: url("/aroskanalen/assets/dokk1/fonts/Gibson-SemiBold-webfont.woff") format("woff");
}
@font-face {
  font-family: 'Gibson Regular';
  src: url("/aroskanalen/assets/dokk1/fonts/Gibson-Regular-webfont.woff") format("woff");
}
@font-face {
  font-family: 'Gibson Light';
  src: url("/aroskanalen/assets/dokk1/fonts/Gibson-Light-webfont.woff") format("woff");
}

body, html {
  height: 100%;
}

body {
  margin: 0;
  padding: 0;

  color: #fff;
  font: 1em/1.5 'Gibson Light', sans-serif;
}

.template {
  position: relative;

  display: flex;
  flex-direction: column;
  justify-content: space-between;

  min-height: 100%;
  width: 100%;

  background-repeat: no-repeat;
  background-color: rgb(35, 85, 135);
  background-blend-mode: multiply;
  background-size: cover;
}

.template--content {
  background-color: rgba(255, 255, 255, .15);
}

.template--header,
.template--group-header {
  padding-top: 4vmin;
  padding-bottom: 4vmin;
  padding-left: 4vmin;

  font-family: 'Gibson SemiBold';
}

.template--header,
.template--group-header,
.template--group-item {
  margin-top: 0;
  margin-bottom: 0;

  letter-spacing: .15vmin;
  line-height: 120%;
}

.template--header {
  background-color: rgba(35, 85, 135, .85);
  font-size: 5vmin;
}

.template--group-header {
  background-color: rgba(0, 0, 0, .3);
  font-size: 3vmin;
}

.template--group-item {
  display: flex;
  flex-flow: column wrap;

  height: 90px; /* fixed height for making child elements using % height, if you have a better solution do it! :) */
  padding-top: 3vmin;
  padding-bottom: 3vmin;
  padding-left: 4vmin;

  font-size: 3vmin;
}

.template--group-item > :nth-child(1) {
  height: 100%;
  width: 22%;
}

.template--group-item  > :nth-child(2),
.template--group-item  > :nth-child(3) {
  height: 50%;
  width: 78%;
}

.template--group-item  > :nth-child(2) {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.template--group-item > :nth-child(3) {
  color: rgba(255, 255, 255, .5);
  line-height: 5vmin;
}

.template--group-item:nth-child(odd) {
  background-color: rgba(255, 255, 255, .05);
}

.template--footer {
  display: flex;
  align-content: flex-end;
  flex-direction: column;
  flex-grow: 1;
  justify-content: center;

  height: 10vmin;

  background-color: rgba(0, 0, 0, .5);
  font-size: 3vmin;
  text-align: center;
}

@media all and (min-width: 1081px) {
  .template--content {
    display: flex;
    justify-content: space-between;
    flex-grow: 1;
  }

  .template--group {
    align-self: stretch;
    flex-grow: 1;
    flex-shrink: 0;

    width: 0; /* Make sure they have equal width */

    border-right: 1px solid rgba(0, 0, 0, .75);
  }

  .template--group-header {
    background-color: rgba(0, 0, 0, .5);
  }

  .template--header,
  .template--group-header {
    padding-top: 2vmin;
    padding-bottom: 2vmin;
    padding-left: 2vmin;
  }

  .template--header {
    font-size: 2.5vmin;
  }

  .template--group-header {
    font-size: 1.5vmin;
  }

  .template--group-item {
    height: 80px; /* fixed height for making child elements using % height, if you have a better solution do it! :) */
    padding-top: 1.5vmin;
    padding-bottom: .2vmin;
    padding-left: 2vmin;

    font-size: 1.5vmin;
  }

  .template--group-item > :nth-child(1) {
    width: 20%;
  }

  .template--group-item  > :nth-child(2),
  .template--group-item  > :nth-child(3) {
    height: 50%;
    width: 75%;
  }

  .template--group-item > :nth-child(3) {
    line-height: 2.5vmin;
  }

  .template--group:nth-child(even) .template--group-item:nth-child(odd) {
    background-color: transparent;
  }

  .template--group:nth-child(even) .template--group-item:nth-child(even) {
    background-color: rgba(255, 255, 255, .05);
  }

  .template--footer {
    max-height: 10vmin;

    font-size: 1.5vmin;
  }
}