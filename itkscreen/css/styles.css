body,html{overflow-x:hidden}html{height:100%}body{display:-webkit-box;display:-webkit-flex;display:-moz-flex;display:-ms-flexbox;display:flex;height:100%;margin:0;width:100%;background-color:#fff;color:#666;font:1em/1.5 "Gibson Light","Helvetica Neue",Helvetica,Arial,sans-serif}h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:0;font-weight:400;line-height:1.2;text-rendering:optimizeLegibility}strong{font-weight:bold}em{font-style:italic}em strong{font-weight:bold}fieldset{border-color:#d9d9d9;border-radius:.85em}fieldset+fieldset{margin-top:3em}legend{padding-right:.5em;padding-left:.5em;color:gray;font-size:1.25em;font-weight:600}a:link{color:#157bb3;text-decoration:none}a:visited{color:#126b9c}a:hover{color:#105c85;text-decoration:underline}a:focus{color:#105c85}p{margin-top:0;margin-bottom:0}img{display:inline;height:auto;max-width:100%;width:100%;vertical-align:bottom}@font-face{font-family:'Gibson SemiBold';src:url("../assets/fonts/Gibson-SemiBold-webfont.woff") format("woff")}@font-face{font-family:'Gibson Regular';src:url("../assets/fonts/Gibson-Regular-webfont.woff") format("woff")}@font-face{font-family:'Gibson Light';src:url("../assets/fonts/Gibson-Light-webfont.woff") format("woff")}.group-wrapper{display:-webkit-box;display:-webkit-flex;display:-moz-flex;display:-ms-flexbox;display:flex;-webkit-align-self:center;-moz-align-self:center;-ms-flex-item-align:center;align-self:center;padding:3vmin}.group-wrapper.has-direction-horizontal{-webkit-box-direction:normal;-webkit-box-orient:vertical;-webkit-flex-direction:column;-moz-flex-direction:column;-ms-flex-direction:column;flex-direction:column}.group-header{margin-top:3vmin;font-family:'Gibson SemiBold';font-size:3vmin;font-weight:600;text-align:center}.group{display:-webkit-box;display:-webkit-flex;display:-moz-flex;display:-ms-flexbox;display:flex;margin-top:-2.5vmin;position:relative;transition:1s}.group--header-wrapper{display:-webkit-box;display:-webkit-flex;display:-moz-flex;display:-ms-flexbox;display:flex;-webkit-box-flex:0;-webkit-flex:0 1 auto;-moz-box-flex:0;-moz-flex:0 1 auto;-ms-flex:0 1 auto;flex:0 1 auto;-webkit-align-content:flex-start;-moz-align-content:flex-start;-ms-flex-line-pack:start;align-content:flex-start;-webkit-align-self:stretch;-moz-align-self:stretch;-ms-flex-item-align:stretch;align-self:stretch;margin-top:3vmin;min-width:7vmin}.group--header-wrapper.has-small-images{margin-top:5vmin}.group--header{-webkit-align-self:flex-start;-moz-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;-webkit-flex-basis:100%;-moz-flex-basis:100%;-ms-flex-preferred-size:100%;flex-basis:100%;margin-top:4.5vmin;font-size:1.5vmin;text-align:center;transform:rotate(-90deg);transition:1s}.group--header.has-small-images{margin-top:3.5vmin}.group--member-wrapper{display:-webkit-box;display:-webkit-flex;display:-moz-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-moz-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-align-content:flex-start;-moz-align-content:flex-start;-ms-flex-line-pack:start;align-content:flex-start;margin-top:3vmin;transition:1s}.group--member{position:relative;margin-right:1.5vmin;margin-bottom:5vmin;height:10vmin;width:10vmin;transition:1s}.group--member.has-small-images{height:8.5vmin;width:8.5vmin;margin-right:3vmin;margin-bottom:6.5vmin}.group--member-image,.group--member-image-back{border:1px solid #d9d9d9;box-sizing:border-box;height:10vmin;width:10vmin;background-size:cover;transition:1s}.group--member-image.has-small-images,.group--member-image-back.has-small-images{height:8.5vmin;width:8.5vmin}.group--member-image.has-rounded-images,.group--member-image-back.has-rounded-images{border-radius:100%}.group--member-image-back{background-color:#fff}.group--member-content{position:absolute;right:0;left:0;padding:.5vmin 0;text-align:center}.group--member-name{color:#157bb3;font-family:'Gibson SemiBold';font-size:.85vmin}.group--member-meta{font-size:.75vmin}.flip-container{perspective:1000}.flip-container.active .flipper{transform:rotateY(180deg)}.flipper{transition:0.6s;transform-style:preserve-3d;position:relative}.front,.back{backface-visibility:hidden;position:absolute;top:0;left:0}.front{z-index:2;transform:rotateY(0deg)}.back{transform:rotateY(180deg)}.toggle{position:absolute;top:1.5vmin;right:3vmin;z-index:99}.toggle a:link,.toggle a:active,.toggle a:visited,.toggle a:hover{text-decoration:none}.toggle a+a{margin-left:1vmin}.toggle--direction:before{content:"→ Horizontal "}.toggle--direction.has-direction-horizontal:before{content:"↓ Vertical "}.toggle--image-style:before{content:"○ Round "}.toggle--image-style.has-rounded-images:before{content:"□ Square "}.toggle--spacing:before{content:"■ Small "}.toggle--spacing.has-small-images:before{content:"■ Large "}

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJhc3NldHMvX2ZsZXhib3guc2NzcyIsImJhc2UvX3ZhcnMuc2NzcyIsImJhc2UvX2Jhc2Uuc2NzcyIsIl9ncm91cC5zY3NzIiwiX3RvZ2dsZS5zY3NzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydCBhc3NldHNcbkBpbXBvcnQgXCJhc3NldHMvZmxleGJveFwiO1xuXG4vLyBJbXBvcnQgYmFzZVxuQGltcG9ydCBcImJhc2UvdmFyc1wiO1xuQGltcG9ydCBcImJhc2UvYmFzZVwiO1xuXG4vLyBJbXBvcnQgdGhlIHJlc3RcbkBpbXBvcnQgXCJncm91cFwiO1xuQGltcG9ydCBcInRvZ2dsZVwiO1xuIiwiLy8gRmxleGJveCBNaXhpbnNcbi8vIGh0dHA6Ly9waGlsaXB3YWx0b24uZ2l0aHViLmlvL3NvbHZlZC1ieS1mbGV4Ym94L1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL3BoaWxpcHdhbHRvbi9zb2x2ZWQtYnktZmxleGJveFxuLy8gXG4vLyBDb3B5cmlnaHQgKGMpIDIwMTMgQnJpYW4gRnJhbmNvXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvXG4vLyBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG9cbi8vIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1Ncbi8vIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0Zcbi8vIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC5cbi8vIElOIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZXG4vLyBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULFxuLy8gVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEVcbi8vIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuLy9cbi8vIFRoaXMgaXMgYSBzZXQgb2YgbWl4aW5zIGZvciB0aG9zZSB3aG8gd2FudCB0byBtZXNzIGFyb3VuZCB3aXRoIGZsZXhib3hcbi8vIHVzaW5nIHRoZSBuYXRpdmUgc3VwcG9ydCBvZiBjdXJyZW50IGJyb3dzZXJzLiBGb3IgZnVsbCBzdXBwb3J0IHRhYmxlXG4vLyBjaGVjazogaHR0cDovL2Nhbml1c2UuY29tL2ZsZXhib3hcbi8vXG4vLyBCYXNpY2FsbHkgdGhpcyB3aWxsIHVzZTpcbi8vXG4vLyAqIEZhbGxiYWNrLCBvbGQgc3ludGF4IChJRTEwLCBtb2JpbGUgd2Via2l0IGJyb3dzZXJzIC0gbm8gd3JhcHBpbmcpXG4vLyAqIEZpbmFsIHN0YW5kYXJkcyBzeW50YXggKEZGLCBTYWZhcmksIENocm9tZSwgSUUxMSwgT3BlcmEpXG4vL1xuLy8gVGhpcyB3YXMgaW5zcGlyZWQgYnk6XG4vLyBcbi8vICogaHR0cDovL2Rldi5vcGVyYS5jb20vYXJ0aWNsZXMvdmlldy9hZHZhbmNlZC1jcm9zcy1icm93c2VyLWZsZXhib3gvXG4vLyBcbi8vIFdpdGggaGVscCBmcm9tOlxuLy8gXG4vLyAqIGh0dHA6Ly93My5vcmcvdHIvY3NzMy1mbGV4Ym94L1xuLy8gKiBodHRwOi8vdGhlLWVjaG9wbGV4Lm5ldC9mbGV4eWJveGVzL1xuLy8gKiBodHRwOi8vbXNkbi5taWNyb3NvZnQuY29tL2VuLXVzL2xpYnJhcnkvaWUvaGg3NzIwNjkodj12cy44NSkuYXNweFxuLy8gKiBodHRwOi8vY3NzLXRyaWNrcy5jb20vdXNpbmctZmxleGJveC9cbi8vICogaHR0cDovL2Rldi5vcGVyYS5jb20vYXJ0aWNsZXMvdmlldy9hZHZhbmNlZC1jcm9zcy1icm93c2VyLWZsZXhib3gvXG4vLyAqIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLXVzL2RvY3Mvd2ViL2d1aWRlL2Nzcy9mbGV4aWJsZV9ib3hlc1xuXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gRmxleGJveCBDb250YWluZXJzXG4vL1xuLy8gVGhlICdmbGV4JyB2YWx1ZSBjYXVzZXMgYW4gZWxlbWVudCB0byBnZW5lcmF0ZSBhIGJsb2NrLWxldmVsIGZsZXhcbi8vIGNvbnRhaW5lciBib3guXG4vL1xuLy8gVGhlICdpbmxpbmUtZmxleCcgdmFsdWUgY2F1c2VzIGFuIGVsZW1lbnQgdG8gZ2VuZXJhdGUgYSBpbmxpbmUtbGV2ZWxcbi8vIGZsZXggY29udGFpbmVyIGJveC4gXG4vL1xuLy8gZGlzcGxheTogZmxleCB8IGlubGluZS1mbGV4XG4vL1xuLy8gaHR0cDovL3czLm9yZy90ci9jc3MzLWZsZXhib3gvI2ZsZXgtY29udGFpbmVyc1xuLy9cbi8vIChQbGFjZWhvbGRlciBzZWxlY3RvcnMgZm9yIGVhY2ggdHlwZSwgZm9yIHRob3NlIHdobyByYXRoZXIgQGV4dGVuZClcblxuQG1peGluIGZsZXhib3gge1xuXHRkaXNwbGF5OiAtd2Via2l0LWJveDtcblx0ZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuXHRkaXNwbGF5OiAtbW96LWZsZXg7XG5cdGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuXHRkaXNwbGF5OiBmbGV4O1xufVxuXG4lZmxleGJveCB7IEBpbmNsdWRlIGZsZXhib3g7IH1cblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbkBtaXhpbiBpbmxpbmUtZmxleCB7XG5cdGRpc3BsYXk6IC13ZWJraXQtaW5saW5lLWJveDtcblx0ZGlzcGxheTogLXdlYmtpdC1pbmxpbmUtZmxleDtcblx0ZGlzcGxheTogLW1vei1pbmxpbmUtZmxleDtcblx0ZGlzcGxheTogLW1zLWlubGluZS1mbGV4Ym94O1xuXHRkaXNwbGF5OiBpbmxpbmUtZmxleDtcbn1cblxuJWlubGluZS1mbGV4IHsgQGluY2x1ZGUgaW5saW5lLWZsZXg7IH1cblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIEZsZXhib3ggRGlyZWN0aW9uXG4vL1xuLy8gVGhlICdmbGV4LWRpcmVjdGlvbicgcHJvcGVydHkgc3BlY2lmaWVzIGhvdyBmbGV4IGl0ZW1zIGFyZSBwbGFjZWQgaW5cbi8vIHRoZSBmbGV4IGNvbnRhaW5lciwgYnkgc2V0dGluZyB0aGUgZGlyZWN0aW9uIG9mIHRoZSBmbGV4IGNvbnRhaW5lcidzXG4vLyBtYWluIGF4aXMuIFRoaXMgZGV0ZXJtaW5lcyB0aGUgZGlyZWN0aW9uIHRoYXQgZmxleCBpdGVtcyBhcmUgbGFpZCBvdXQgaW4uIFxuLy9cbi8vIFZhbHVlczogcm93IHwgcm93LXJldmVyc2UgfCBjb2x1bW4gfCBjb2x1bW4tcmV2ZXJzZVxuLy8gRGVmYXVsdDogcm93XG4vL1xuLy8gaHR0cDovL3czLm9yZy90ci9jc3MzLWZsZXhib3gvI2ZsZXgtZGlyZWN0aW9uLXByb3BlcnR5XG5cbkBtaXhpbiBmbGV4LWRpcmVjdGlvbigkdmFsdWU6IHJvdykge1xuXHRAaWYgJHZhbHVlID09IHJvdy1yZXZlcnNlIHtcblx0XHQtd2Via2l0LWJveC1kaXJlY3Rpb246IHJldmVyc2U7XG5cdFx0LXdlYmtpdC1ib3gtb3JpZW50OiBob3Jpem9udGFsO1xuXHR9IEBlbHNlIGlmICR2YWx1ZSA9PSBjb2x1bW4ge1xuXHRcdC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuXHRcdC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG5cdH0gQGVsc2UgaWYgJHZhbHVlID09IGNvbHVtbi1yZXZlcnNlIHtcblx0XHQtd2Via2l0LWJveC1kaXJlY3Rpb246IHJldmVyc2U7XG5cdFx0LXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcblx0fSBAZWxzZSB7XG5cdFx0LXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG5cdFx0LXdlYmtpdC1ib3gtb3JpZW50OiBob3Jpem9udGFsO1xuXHR9XG5cdC13ZWJraXQtZmxleC1kaXJlY3Rpb246ICR2YWx1ZTtcblx0LW1vei1mbGV4LWRpcmVjdGlvbjogJHZhbHVlO1xuXHQtbXMtZmxleC1kaXJlY3Rpb246ICR2YWx1ZTtcblx0ZmxleC1kaXJlY3Rpb246ICR2YWx1ZTtcbn1cblx0Ly8gU2hvcnRlciB2ZXJzaW9uOlxuXHRAbWl4aW4gZmxleC1kaXIoJGFyZ3MuLi4pIHsgQGluY2x1ZGUgZmxleC1kaXJlY3Rpb24oJGFyZ3MuLi4pOyB9XG5cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBGbGV4Ym94IFdyYXBcbi8vXG4vLyBUaGUgJ2ZsZXgtd3JhcCcgcHJvcGVydHkgY29udHJvbHMgd2hldGhlciB0aGUgZmxleCBjb250YWluZXIgaXMgc2luZ2xlLWxpbmVcbi8vIG9yIG11bHRpLWxpbmUsIGFuZCB0aGUgZGlyZWN0aW9uIG9mIHRoZSBjcm9zcy1heGlzLCB3aGljaCBkZXRlcm1pbmVzXG4vLyB0aGUgZGlyZWN0aW9uIG5ldyBsaW5lcyBhcmUgc3RhY2tlZCBpbi4gXG4vL1xuLy8gVmFsdWVzOiBub3dyYXAgfCB3cmFwIHwgd3JhcC1yZXZlcnNlXG4vLyBEZWZhdWx0OiBub3dyYXBcbi8vXG4vLyBodHRwOi8vdzMub3JnL3RyL2NzczMtZmxleGJveC8jZmxleC13cmFwLXByb3BlcnR5XG5cbkBtaXhpbiBmbGV4LXdyYXAoJHZhbHVlOiBub3dyYXApIHtcblx0Ly8gTm8gV2Via2l0IEJveCBmYWxsYmFjay5cblx0LXdlYmtpdC1mbGV4LXdyYXA6ICR2YWx1ZTtcblx0LW1vei1mbGV4LXdyYXA6ICR2YWx1ZTtcblx0QGlmICR2YWx1ZSA9PSBub3dyYXAge1xuXHRcdC1tcy1mbGV4LXdyYXA6IG5vbmU7XG5cdH0gQGVsc2UgeyBcblx0XHQtbXMtZmxleC13cmFwOiAkdmFsdWU7IFxuXHR9XG5cdGZsZXgtd3JhcDogJHZhbHVlO1xufVxuXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gRmxleGJveCBGbG93IChzaG9ydGhhbmQpXG4vL1xuLy8gVGhlICdmbGV4LWZsb3cnIHByb3BlcnR5IGlzIGEgc2hvcnRoYW5kIGZvciBzZXR0aW5nIHRoZSAnZmxleC1kaXJlY3Rpb24nXG4vLyBhbmQgJ2ZsZXgtd3JhcCcgcHJvcGVydGllcywgd2hpY2ggdG9nZXRoZXIgZGVmaW5lIHRoZSBmbGV4IGNvbnRhaW5lcidzXG4vLyBtYWluIGFuZCBjcm9zcyBheGVzLlxuLy9cbi8vIFZhbHVlczogPGZsZXgtZGlyZWN0aW9uPiB8IDxmbGV4LXdyYXA+IFxuLy8gRGVmYXVsdDogcm93IG5vd3JhcFxuLy9cbi8vIGh0dHA6Ly93My5vcmcvdHIvY3NzMy1mbGV4Ym94LyNmbGV4LWZsb3ctcHJvcGVydHlcblxuQG1peGluIGZsZXgtZmxvdygkdmFsdWVzOiAocm93IG5vd3JhcCkpIHtcblx0Ly8gTm8gV2Via2l0IEJveCBmYWxsYmFjay5cblx0LXdlYmtpdC1mbGV4LWZsb3c6ICR2YWx1ZXM7XG5cdC1tb3otZmxleC1mbG93OiAkdmFsdWVzO1xuXHQtbXMtZmxleC1mbG93OiAkdmFsdWVzO1xuXHRmbGV4LWZsb3c6ICR2YWx1ZXM7XG59XG5cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBGbGV4Ym94IE9yZGVyXG4vL1xuLy8gVGhlICdvcmRlcicgcHJvcGVydHkgY29udHJvbHMgdGhlIG9yZGVyIGluIHdoaWNoIGZsZXggaXRlbXMgYXBwZWFyIHdpdGhpblxuLy8gdGhlaXIgZmxleCBjb250YWluZXIsIGJ5IGFzc2lnbmluZyB0aGVtIHRvIG9yZGluYWwgZ3JvdXBzLlxuLy9cbi8vIERlZmF1bHQ6IDBcbi8vXG4vLyBodHRwOi8vdzMub3JnL3RyL2NzczMtZmxleGJveC8jb3JkZXItcHJvcGVydHlcblxuQG1peGluIG9yZGVyKCRpbnQ6IDApIHtcblx0LXdlYmtpdC1ib3gtb3JkaW5hbC1ncm91cDogJGludCArIDE7XG5cdC13ZWJraXQtb3JkZXI6ICRpbnQ7XG5cdC1tb3otb3JkZXI6ICRpbnQ7XG5cdC1tcy1mbGV4LW9yZGVyOiAkaW50O1xuXHRvcmRlcjogJGludDtcbn1cblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIEZsZXhib3ggR3Jvd1xuLy9cbi8vIFRoZSAnZmxleC1ncm93JyBwcm9wZXJ0eSBzZXRzIHRoZSBmbGV4IGdyb3cgZmFjdG9yLiBOZWdhdGl2ZSBudW1iZXJzXG4vLyBhcmUgaW52YWxpZC5cbi8vXG4vLyBEZWZhdWx0OiAwXG4vL1xuLy8gaHR0cDovL3czLm9yZy90ci9jc3MzLWZsZXhib3gvI2ZsZXgtZ3Jvdy1wcm9wZXJ0eVxuXG5AbWl4aW4gZmxleC1ncm93KCRpbnQ6IDApIHtcblx0LXdlYmtpdC1ib3gtZmxleDogJGludDtcblx0LXdlYmtpdC1mbGV4LWdyb3c6ICRpbnQ7XG5cdC1tb3otZmxleC1ncm93OiAkaW50O1xuXHQtbXMtZmxleC1wb3NpdGl2ZTogJGludDtcblx0ZmxleC1ncm93OiAkaW50O1xufVxuXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gRmxleGJveCBTaHJpbmtcbi8vXG4vLyBUaGUgJ2ZsZXgtc2hyaW5rJyBwcm9wZXJ0eSBzZXRzIHRoZSBmbGV4IHNocmluayBmYWN0b3IuIE5lZ2F0aXZlIG51bWJlcnNcbi8vIGFyZSBpbnZhbGlkLlxuLy9cbi8vIERlZmF1bHQ6IDFcbi8vXG4vLyBodHRwOi8vdzMub3JnL3RyL2NzczMtZmxleGJveC8jZmxleC1zaHJpbmstcHJvcGVydHlcblxuQG1peGluIGZsZXgtc2hyaW5rKCRpbnQ6IDEpIHtcblx0LXdlYmtpdC1mbGV4LXNocmluazogJGludDtcblx0LW1vei1mbGV4LXNocmluazogJGludDtcblx0LW1zLWZsZXgtbmVnYXRpdmU6ICRpbnQ7XG5cdGZsZXgtc2hyaW5rOiAkaW50O1xufVxuXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gRmxleGJveCBCYXNpc1xuLy9cbi8vIFRoZSAnZmxleC1iYXNpcycgcHJvcGVydHkgc2V0cyB0aGUgZmxleCBiYXNpcy4gTmVnYXRpdmUgbGVuZ3RocyBhcmUgaW52YWxpZC4gXG4vL1xuLy8gVmFsdWVzOiBMaWtlIFwid2lkdGhcIiBcbi8vIERlZmF1bHQ6IGF1dG9cbi8vXG4vLyBodHRwOi8vd3d3LnczLm9yZy9UUi9jc3MzLWZsZXhib3gvI2ZsZXgtYmFzaXMtcHJvcGVydHlcblxuQG1peGluIGZsZXgtYmFzaXMoJHZhbHVlOiBhdXRvKSB7XG5cdC13ZWJraXQtZmxleC1iYXNpczogJHZhbHVlO1xuXHQtbW96LWZsZXgtYmFzaXM6ICR2YWx1ZTtcblx0LW1zLWZsZXgtcHJlZmVycmVkLXNpemU6ICR2YWx1ZTtcblx0ZmxleC1iYXNpczogJHZhbHVlO1xufVxuXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gRmxleGJveCBcIkZsZXhcIiAoc2hvcnRoYW5kKVxuLy9cbi8vIFRoZSAnZmxleCcgcHJvcGVydHkgc3BlY2lmaWVzIHRoZSBjb21wb25lbnRzIG9mIGEgZmxleGlibGUgbGVuZ3RoOiB0aGVcbi8vIGZsZXggZ3JvdyBmYWN0b3IgYW5kIGZsZXggc2hyaW5rIGZhY3RvciwgYW5kIHRoZSBmbGV4IGJhc2lzLiBXaGVuIGFuXG4vLyBlbGVtZW50IGlzIGEgZmxleCBpdGVtLCAnZmxleCcgaXMgY29uc3VsdGVkIGluc3RlYWQgb2YgdGhlIG1haW4gc2l6ZVxuLy8gcHJvcGVydHkgdG8gZGV0ZXJtaW5lIHRoZSBtYWluIHNpemUgb2YgdGhlIGVsZW1lbnQuIElmIGFuIGVsZW1lbnQgaXNcbi8vIG5vdCBhIGZsZXggaXRlbSwgJ2ZsZXgnIGhhcyBubyBlZmZlY3QuXG4vL1xuLy8gVmFsdWVzOiBub25lIHwgPGZsZXgtZ3Jvdz4gPGZsZXgtc2hyaW5rPiB8fCA8ZmxleC1iYXNpcz5cbi8vIERlZmF1bHQ6IFNlZSBpbmRpdmlkdWFsIHByb3BlcnRpZXMgKDEgMSAwKS5cbi8vXG4vLyBodHRwOi8vdzMub3JnL3RyL2NzczMtZmxleGJveC8jZmxleC1wcm9wZXJ0eVxuXG5AbWl4aW4gZmxleCgkZmc6IDEsICRmczogbnVsbCwgJGZiOiBudWxsKSB7XG4gICAgXG5cdC8vIFNldCBhIHZhcmlhYmxlIHRvIGJlIHVzZWQgYnkgYm94LWZsZXggcHJvcGVydGllc1xuXHQkZmctYm94ZmxleDogJGZnO1xuXG5cdC8vIEJveC1GbGV4IG9ubHkgc3VwcG9ydHMgYSBmbGV4LWdyb3cgdmFsdWUgc28gbGV0J3MgZ3JhYiB0aGVcblx0Ly8gZmlyc3QgaXRlbSBpbiB0aGUgbGlzdCBhbmQganVzdCByZXR1cm4gdGhhdC5cblx0QGlmIHR5cGUtb2YoJGZnKSA9PSAnbGlzdCcge1xuXHRcdCRmZy1ib3hmbGV4OiBudGgoJGZnLCAxKTtcblx0fVxuXG5cdC13ZWJraXQtYm94LWZsZXg6ICRmZy1ib3hmbGV4O1xuXHQtd2Via2l0LWZsZXg6ICRmZyAkZnMgJGZiO1xuXHQtbW96LWJveC1mbGV4OiAkZmctYm94ZmxleDtcblx0LW1vei1mbGV4OiAkZmcgJGZzICRmYjtcblx0LW1zLWZsZXg6ICRmZyAkZnMgJGZiO1xuXHRmbGV4OiAkZmcgJGZzICRmYjtcbn1cblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIEZsZXhib3ggSnVzdGlmeSBDb250ZW50XG4vL1xuLy8gVGhlICdqdXN0aWZ5LWNvbnRlbnQnIHByb3BlcnR5IGFsaWducyBmbGV4IGl0ZW1zIGFsb25nIHRoZSBtYWluIGF4aXNcbi8vIG9mIHRoZSBjdXJyZW50IGxpbmUgb2YgdGhlIGZsZXggY29udGFpbmVyLiBUaGlzIGlzIGRvbmUgYWZ0ZXIgYW55IGZsZXhpYmxlXG4vLyBsZW5ndGhzIGFuZCBhbnkgYXV0byBtYXJnaW5zIGhhdmUgYmVlbiByZXNvbHZlZC4gVHlwaWNhbGx5IGl0IGhlbHBzIGRpc3RyaWJ1dGVcbi8vIGV4dHJhIGZyZWUgc3BhY2UgbGVmdG92ZXIgd2hlbiBlaXRoZXIgYWxsIHRoZSBmbGV4IGl0ZW1zIG9uIGEgbGluZSBhcmVcbi8vIGluZmxleGlibGUsIG9yIGFyZSBmbGV4aWJsZSBidXQgaGF2ZSByZWFjaGVkIHRoZWlyIG1heGltdW0gc2l6ZS4gSXQgYWxzb1xuLy8gZXhlcnRzIHNvbWUgY29udHJvbCBvdmVyIHRoZSBhbGlnbm1lbnQgb2YgaXRlbXMgd2hlbiB0aGV5IG92ZXJmbG93IHRoZSBsaW5lLlxuLy9cbi8vIE5vdGU6ICdzcGFjZS0qJyB2YWx1ZXMgbm90IHN1cHBvcnRlZCBpbiBvbGRlciBzeW50YXhlcy5cbi8vXG4vLyBWYWx1ZXM6IGZsZXgtc3RhcnQgfCBmbGV4LWVuZCB8IGNlbnRlciB8IHNwYWNlLWJldHdlZW4gfCBzcGFjZS1hcm91bmRcbi8vIERlZmF1bHQ6IGZsZXgtc3RhcnRcbi8vXG4vLyBodHRwOi8vdzMub3JnL3RyL2NzczMtZmxleGJveC8janVzdGlmeS1jb250ZW50LXByb3BlcnR5XG5cbkBtaXhpbiBqdXN0aWZ5LWNvbnRlbnQoJHZhbHVlOiBmbGV4LXN0YXJ0KSB7XG5cdEBpZiAkdmFsdWUgPT0gZmxleC1zdGFydCB7XG5cdFx0LXdlYmtpdC1ib3gtcGFjazogc3RhcnQ7XG5cdFx0LW1zLWZsZXgtcGFjazogc3RhcnQ7XG5cdH0gQGVsc2UgaWYgJHZhbHVlID09IGZsZXgtZW5kIHtcblx0XHQtd2Via2l0LWJveC1wYWNrOiBlbmQ7XG5cdFx0LW1zLWZsZXgtcGFjazogZW5kO1xuXHR9IEBlbHNlIGlmICR2YWx1ZSA9PSBzcGFjZS1iZXR3ZWVuIHtcblx0XHQtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuXHRcdC1tcy1mbGV4LXBhY2s6IGp1c3RpZnk7XG5cdH0gQGVsc2UgaWYgJHZhbHVlID09IHNwYWNlLWFyb3VuZCB7XG5cdFx0LW1zLWZsZXgtcGFjazogZGlzdHJpYnV0ZTtcblx0fSBAZWxzZSB7XG5cdFx0LXdlYmtpdC1ib3gtcGFjazogJHZhbHVlO1xuXHRcdC1tcy1mbGV4LXBhY2s6ICR2YWx1ZTtcblx0fVxuXHQtd2Via2l0LWp1c3RpZnktY29udGVudDogJHZhbHVlO1xuXHQtbW96LWp1c3RpZnktY29udGVudDogJHZhbHVlO1xuXHRqdXN0aWZ5LWNvbnRlbnQ6ICR2YWx1ZTtcbn1cblx0Ly8gU2hvcnRlciB2ZXJzaW9uOlxuXHRAbWl4aW4gZmxleC1qdXN0KCRhcmdzLi4uKSB7IEBpbmNsdWRlIGp1c3RpZnktY29udGVudCgkYXJncy4uLik7IH1cblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIEZsZXhib3ggQWxpZ24gSXRlbXNcbi8vXG4vLyBGbGV4IGl0ZW1zIGNhbiBiZSBhbGlnbmVkIGluIHRoZSBjcm9zcyBheGlzIG9mIHRoZSBjdXJyZW50IGxpbmUgb2YgdGhlXG4vLyBmbGV4IGNvbnRhaW5lciwgc2ltaWxhciB0byAnanVzdGlmeS1jb250ZW50JyBidXQgaW4gdGhlIHBlcnBlbmRpY3VsYXJcbi8vIGRpcmVjdGlvbi4gJ2FsaWduLWl0ZW1zJyBzZXRzIHRoZSBkZWZhdWx0IGFsaWdubWVudCBmb3IgYWxsIG9mIHRoZSBmbGV4XG4vLyBjb250YWluZXIncyBpdGVtcywgaW5jbHVkaW5nIGFub255bW91cyBmbGV4IGl0ZW1zLiAnYWxpZ24tc2VsZicgYWxsb3dzXG4vLyB0aGlzIGRlZmF1bHQgYWxpZ25tZW50IHRvIGJlIG92ZXJyaWRkZW4gZm9yIGluZGl2aWR1YWwgZmxleCBpdGVtcy4gKEZvclxuLy8gYW5vbnltb3VzIGZsZXggaXRlbXMsICdhbGlnbi1zZWxmJyBhbHdheXMgbWF0Y2hlcyB0aGUgdmFsdWUgb2YgJ2FsaWduLWl0ZW1zJ1xuLy8gb24gdGhlaXIgYXNzb2NpYXRlZCBmbGV4IGNvbnRhaW5lci4pIFxuLy9cbi8vIFZhbHVlczogZmxleC1zdGFydCB8IGZsZXgtZW5kIHwgY2VudGVyIHwgYmFzZWxpbmUgfCBzdHJldGNoXG4vLyBEZWZhdWx0OiBzdHJldGNoXG4vL1xuLy8gaHR0cDovL3czLm9yZy90ci9jc3MzLWZsZXhib3gvI2FsaWduLWl0ZW1zLXByb3BlcnR5XG5cbkBtaXhpbiBhbGlnbi1pdGVtcygkdmFsdWU6IHN0cmV0Y2gpIHtcblx0QGlmICR2YWx1ZSA9PSBmbGV4LXN0YXJ0IHtcblx0XHQtd2Via2l0LWJveC1hbGlnbjogc3RhcnQ7XG5cdFx0LW1zLWZsZXgtYWxpZ246IHN0YXJ0O1xuXHR9IEBlbHNlIGlmICR2YWx1ZSA9PSBmbGV4LWVuZCB7XG5cdFx0LXdlYmtpdC1ib3gtYWxpZ246IGVuZDtcblx0XHQtbXMtZmxleC1hbGlnbjogZW5kO1xuXHR9IEBlbHNlIHtcblx0XHQtd2Via2l0LWJveC1hbGlnbjogJHZhbHVlO1xuXHRcdC1tcy1mbGV4LWFsaWduOiAkdmFsdWU7XG5cdH1cblx0LXdlYmtpdC1hbGlnbi1pdGVtczogJHZhbHVlO1xuXHQtbW96LWFsaWduLWl0ZW1zOiAkdmFsdWU7XG5cdGFsaWduLWl0ZW1zOiAkdmFsdWU7XG59XG5cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBGbGV4Ym94IEFsaWduIFNlbGZcbi8vXG4vLyBWYWx1ZXM6IGF1dG8gfCBmbGV4LXN0YXJ0IHwgZmxleC1lbmQgfCBjZW50ZXIgfCBiYXNlbGluZSB8IHN0cmV0Y2hcbi8vIERlZmF1bHQ6IGF1dG9cblxuQG1peGluIGFsaWduLXNlbGYoJHZhbHVlOiBhdXRvKSB7XG5cdC8vIE5vIFdlYmtpdCBCb3ggRmFsbGJhY2suXG5cdC13ZWJraXQtYWxpZ24tc2VsZjogJHZhbHVlO1xuXHQtbW96LWFsaWduLXNlbGY6ICR2YWx1ZTtcblx0QGlmICR2YWx1ZSA9PSBmbGV4LXN0YXJ0IHtcblx0XHQtbXMtZmxleC1pdGVtLWFsaWduOiBzdGFydDtcblx0fSBAZWxzZSBpZiAkdmFsdWUgPT0gZmxleC1lbmQge1xuXHRcdC1tcy1mbGV4LWl0ZW0tYWxpZ246IGVuZDtcblx0fSBAZWxzZSB7XG5cdFx0LW1zLWZsZXgtaXRlbS1hbGlnbjogJHZhbHVlO1xuXHR9XG5cdGFsaWduLXNlbGY6ICR2YWx1ZTtcbn1cblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIEZsZXhib3ggQWxpZ24gQ29udGVudFxuLy9cbi8vIFRoZSAnYWxpZ24tY29udGVudCcgcHJvcGVydHkgYWxpZ25zIGEgZmxleCBjb250YWluZXIncyBsaW5lcyB3aXRoaW4gdGhlXG4vLyBmbGV4IGNvbnRhaW5lciB3aGVuIHRoZXJlIGlzIGV4dHJhIHNwYWNlIGluIHRoZSBjcm9zcy1heGlzLCBzaW1pbGFyIHRvXG4vLyBob3cgJ2p1c3RpZnktY29udGVudCcgYWxpZ25zIGluZGl2aWR1YWwgaXRlbXMgd2l0aGluIHRoZSBtYWluLWF4aXMuIE5vdGUsXG4vLyB0aGlzIHByb3BlcnR5IGhhcyBubyBlZmZlY3Qgd2hlbiB0aGUgZmxleGJveCBoYXMgb25seSBhIHNpbmdsZSBsaW5lLlxuLy9cbi8vIFZhbHVlczogZmxleC1zdGFydCB8IGZsZXgtZW5kIHwgY2VudGVyIHwgc3BhY2UtYmV0d2VlbiB8IHNwYWNlLWFyb3VuZCB8IHN0cmV0Y2hcbi8vIERlZmF1bHQ6IHN0cmV0Y2hcbi8vXG4vLyBodHRwOi8vdzMub3JnL3RyL2NzczMtZmxleGJveC8jYWxpZ24tY29udGVudC1wcm9wZXJ0eVxuXG5AbWl4aW4gYWxpZ24tY29udGVudCgkdmFsdWU6IHN0cmV0Y2gpIHtcblx0Ly8gTm8gV2Via2l0IEJveCBGYWxsYmFjay5cblx0LXdlYmtpdC1hbGlnbi1jb250ZW50OiAkdmFsdWU7XG5cdC1tb3otYWxpZ24tY29udGVudDogJHZhbHVlO1xuXHRAaWYgJHZhbHVlID09IGZsZXgtc3RhcnQge1xuXHRcdC1tcy1mbGV4LWxpbmUtcGFjazogc3RhcnQ7XG5cdH0gQGVsc2UgaWYgJHZhbHVlID09IGZsZXgtZW5kIHtcblx0XHQtbXMtZmxleC1saW5lLXBhY2s6IGVuZDtcblx0fSBAZWxzZSB7XG5cdFx0LW1zLWZsZXgtbGluZS1wYWNrOiAkdmFsdWU7XG5cdH1cblx0YWxpZ24tY29udGVudDogJHZhbHVlO1xufVxuIiwiLyoqXG4gKlxuICogVmFyaWFibGVzXG4gKlxuICovXG5cblxuLyogWi1pbmRleCAoaW5zcGlyZWQgYnkgaHR0cHM6Ly93d3cuc21hc2hpbmdtYWdhemluZS5jb20vMjAxNC8wNi9zYXNzeS16LWluZGV4LW1hbmFnZW1lbnQtZm9yLWNvbXBsZXgtbGF5b3V0cy8pXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuJHotaW5kZXgtZWxlbWVudHM6IG1vZGFsLW92ZXJsYXktaW5pdCwgaGVhZGVyLW92ZXJsYXksIGhlYWRlciwgY29udGVudCwgbmF2LCBsb2dvLCBjb250ZW50LWRyb3Bkb3duLCBvdmVybGF5LCBtb2RhbC1vdmVybGF5LXZpc2libGUsIGhhbWJ1cmdlci1tZW51LCBoYW1idXJnZXItbWVudS10b2dnbGU7XG5cblxuLyogQ29sb3JzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLy8gVGhlbWUgY29sb3JzXG4kdGhlbWUtY29sb3I6ICAgICAgICAgICAgIHJnYigyMSwgMTIzLCAxNzkpO1xuJHRoZW1lLWNvbG9yLWxpZ2h0OiAgICAgICByZ2IoMTk1LCAyMjYsIDI0NCk7XG4kdGhlbWUtY29sb3ItZGFyazogICAgICAgIHJnYig0MiwgNDUsIDg4KTtcbiR0aGVtZS1jb2xvci1zZWNvbmRhcnk6ICAgI2IxM2EzMjtcbiRlcnJvci1jb2xvcjogICAgICAgICAgICAgI2ZmYmFiYTtcblxuJGxpbmstY29sb3I6ICAgICAgICAgICAgICAkdGhlbWUtY29sb3I7XG4kbGluay1jb2xvci1ob3ZlcjogICAgICAgIGRhcmtlbigkbGluay1jb2xvciwgMjUlKTtcblxuLy8gR3JheXNjYWxlIGNvbG9yc1xuJGJsYWNrOiAgICAgICAgICAgICAgICMwMDA7XG4kd2hpdGU6ICAgICAgICAgICAgICAgI2ZmZjtcblxuJGdyYXktbGlnaHRlc3Q6ICAgIGxpZ2h0ZW4oJGJsYWNrLCA5NSUpO1xuJGdyYXktbGlnaHRlcjogICAgIGxpZ2h0ZW4oJGJsYWNrLCA4NSUpO1xuJGdyYXktbGlnaHQ6ICAgICAgIGxpZ2h0ZW4oJGJsYWNrLCA3NSUpO1xuJGdyYXk6ICAgICAgICAgICAgIGxpZ2h0ZW4oJGJsYWNrLCA2MCUpO1xuJGdyYXktZGFyazogICAgICAgIGxpZ2h0ZW4oJGJsYWNrLCA1MCUpO1xuJGdyYXktZGFya2VyOiAgICAgIGxpZ2h0ZW4oJGJsYWNrLCA0MCUpO1xuJGdyYXktZGFya2VzdDogICAgIGxpZ2h0ZW4oJGJsYWNrLCAxMiUpO1xuXG5cblxuLyogVHlwb2dyYWh5XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuJGZvbnQtZmFtaWx5OiAgICAgIFwiR2lic29uIExpZ2h0XCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiRmb250OiAgICAgICAgICAgICAxZW0vMS41ICRmb250LWZhbWlseTtcblxuXG4vKiBGbGlwY2FyZFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiRpbWFnZXdpZHRoOiAxMDBweDtcbiRpbWFnZWhlaWdodDogODBweDtcbiRmbGlwY2FyZHdpZHRoOiAkaW1hZ2V3aWR0aDtcbiRmbGlwY2FyZGhlaWdodDogJGltYWdlaGVpZ2h0ICsgNTVweDtcbiIsIi8qKlxuICpcbiAqIEJhc2VcbiAqXG4gKiBDb250YWlucyBzdHlsaW5nIGFuZCByZXNldCBvZiBiYXNpYyBlbGVtZW50c1xuICpcbiAqL1xuXG5cbi8vIE1ha2Ugc3VyZSB0aGUgdXNlciBjYW4ndCBzY3JvbGwgc2lkZXdheXMuXG5ib2R5LCBodG1sIHtcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xufVxuXG5odG1sIHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG5ib2R5IHtcbiAgQGluY2x1ZGUgZmxleGJveDtcblxuICBoZWlnaHQ6IDEwMCU7XG4gIG1hcmdpbjogMDtcbiAgd2lkdGg6IDEwMCU7XG5cbiAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlO1xuXG4gIGNvbG9yOiAkZ3JheS1kYXJrZXI7XG4gIGZvbnQ6ICRmb250O1xufVxuXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYge1xuICBtYXJnaW4tdG9wOiAwO1xuICBtYXJnaW4tYm90dG9tOiAwO1xuXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG5cbiAgLyogVGhpcyBmaXhlcyBodWdlIHNwYWNlcyB3aGVuIGEgaGVhZGluZyB3cmFwcyBvbnRvIHR3byBsaW5lcyAqL1xuICBsaW5lLWhlaWdodDogMS4yO1xuXG4gIC8qIFZvb2RvbyB0byBlbmFibGUgbGlnYXR1cmVzIGFuZCBrZXJuaW5nICovXG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG59XG5cblxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cblxuZW0ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG5cbiAgc3Ryb25nIHtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgfVxufVxuXG5maWVsZHNldCB7XG4gIGJvcmRlci1jb2xvcjogJGdyYXktbGlnaHRlcjtcbiAgYm9yZGVyLXJhZGl1czogLjg1ZW07XG59XG5cbmZpZWxkc2V0ICsgZmllbGRzZXQge1xuICBtYXJnaW4tdG9wOiAzZW07XG59XG5cbmxlZ2VuZCB7XG4gIHBhZGRpbmctcmlnaHQ6IC41ZW07XG4gIHBhZGRpbmctbGVmdDogLjVlbTtcblxuICBjb2xvcjogJGdyYXktZGFyaztcbiAgZm9udC1zaXplOiAxLjI1ZW07XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG59XG5cblxuLyogTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG5hIHtcbiAgJjpsaW5rIHtcbiAgICBjb2xvcjogJGxpbmstY29sb3I7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB9XG5cbiAgJjp2aXNpdGVkIHtcbiAgICBjb2xvcjogZGFya2VuKCRsaW5rLWNvbG9yLCA1JSk7XG4gIH1cblxuICAmOmhvdmVyIHtcbiAgICBjb2xvcjogZGFya2VuKCRsaW5rLWNvbG9yLCAxMCUpO1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICB9XG5cbiAgJjpmb2N1cyB7XG4gICAgY29sb3I6IGRhcmtlbigkbGluay1jb2xvciwgMTAlKTtcbiAgfVxufVxuXG5cbi8qIFBhcmFncmFwaFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbnAge1xuICBtYXJnaW4tdG9wOiAwO1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG5cbi8qIEltYWdlXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuaW1nIHtcbiAgZGlzcGxheTogaW5saW5lO1xuICBoZWlnaHQ6IGF1dG87XG4gIG1heC13aWR0aDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIHZlcnRpY2FsLWFsaWduOiBib3R0b207XG59XG4iLCJAZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdHaWJzb24gU2VtaUJvbGQnO1xuICBzcmM6IHVybChcIi4uL2Fzc2V0cy9mb250cy9HaWJzb24tU2VtaUJvbGQtd2ViZm9udC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdHaWJzb24gUmVndWxhcic7XG4gIHNyYzogdXJsKFwiLi4vYXNzZXRzL2ZvbnRzL0dpYnNvbi1SZWd1bGFyLXdlYmZvbnQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnR2lic29uIExpZ2h0JztcbiAgc3JjOiB1cmwoXCIuLi9hc3NldHMvZm9udHMvR2lic29uLUxpZ2h0LXdlYmZvbnQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xufVxuXG4kbWVtYmVyLXdpZHRoOiAxMHZtaW47XG5cbi5ncm91cC13cmFwcGVyIHtcbiAgQGluY2x1ZGUgZmxleGJveDtcbiAgQGluY2x1ZGUgYWxpZ24tc2VsZihjZW50ZXIpO1xuXG4gIHBhZGRpbmc6IDN2bWluO1xuXG4gICYuaGFzLWRpcmVjdGlvbi1ob3Jpem9udGFsIHtcbiAgICBAaW5jbHVkZSBmbGV4LWRpcmVjdGlvbihjb2x1bW4pO1xuICB9XG59XG5cbi5ncm91cC1oZWFkZXIge1xuICBtYXJnaW4tdG9wOiAzdm1pbjtcblxuICBmb250LWZhbWlseTogJ0dpYnNvbiBTZW1pQm9sZCc7XG4gIGZvbnQtc2l6ZTogM3ZtaW47XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmdyb3VwIHtcbiAgQGluY2x1ZGUgZmxleGJveDtcblxuICBtYXJnaW4tdG9wOiAtMi41dm1pbjtcblxuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgdHJhbnNpdGlvbjogMXM7XG5cbiAgJjpub3QoLmhhcy1kaXJlY3Rpb24taG9yaXpvbnRhbCkge1xuICB9XG5cbiAgJi0taGVhZGVyLXdyYXBwZXIge1xuICAgIEBpbmNsdWRlIGZsZXhib3g7XG4gICAgQGluY2x1ZGUgZmxleCgwIDEgYXV0byk7XG4gICAgQGluY2x1ZGUgYWxpZ24tY29udGVudChmbGV4LXN0YXJ0KTtcbiAgICBAaW5jbHVkZSBhbGlnbi1zZWxmKHN0cmV0Y2gpO1xuXG4gICAgbWFyZ2luLXRvcDogM3ZtaW47XG4gICAgbWluLXdpZHRoOiA3dm1pbjtcblxuICAgICYuaGFzLXNtYWxsLWltYWdlcyB7XG4gICAgICBtYXJnaW4tdG9wOiA1dm1pbjtcbiAgICB9XG4gIH1cblxuICAmLS1oZWFkZXIge1xuICAgIEBpbmNsdWRlIGFsaWduLXNlbGYoZmxleC1zdGFydCk7XG4gICAgQGluY2x1ZGUgZmxleC1iYXNpcygxMDAlKTtcblxuICAgIG1hcmdpbi10b3A6IDQuNXZtaW47XG5cbiAgICBmb250LXNpemU6IDEuNXZtaW47XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gICAgdHJhbnNmb3JtOiByb3RhdGUoLTkwZGVnKTtcbiAgICB0cmFuc2l0aW9uOiAxcztcblxuICAgICYuaGFzLXNtYWxsLWltYWdlcyB7XG4gICAgICBtYXJnaW4tdG9wOiAzLjV2bWluO1xuICAgIH1cbiAgfVxuXG4gICYtLW1lbWJlci13cmFwcGVyIHtcbiAgICBAaW5jbHVkZSBmbGV4Ym94O1xuICAgIEBpbmNsdWRlIGZsZXgtd3JhcCh3cmFwKTtcbiAgICBAaW5jbHVkZSBhbGlnbi1jb250ZW50KGZsZXgtc3RhcnQpO1xuXG4gICAgbWFyZ2luLXRvcDogM3ZtaW47XG5cbiAgICB0cmFuc2l0aW9uOiAxcztcbiAgfVxuXG4gICYtLW1lbWJlciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgbWFyZ2luLXJpZ2h0OiAxLjV2bWluO1xuICAgIG1hcmdpbi1ib3R0b206IDV2bWluO1xuICAgIGhlaWdodDogJG1lbWJlci13aWR0aDtcbiAgICB3aWR0aDogJG1lbWJlci13aWR0aDtcblxuICAgIHRyYW5zaXRpb246IDFzO1xuXG4gICAgJi5oYXMtc21hbGwtaW1hZ2VzIHtcbiAgICAgIGhlaWdodDogJG1lbWJlci13aWR0aCAqIC44NTtcbiAgICAgIHdpZHRoOiAkbWVtYmVyLXdpZHRoICogLjg1O1xuICAgICAgbWFyZ2luLXJpZ2h0OiAzdm1pbjtcbiAgICAgIG1hcmdpbi1ib3R0b206IDYuNXZtaW47XG4gICAgfVxuICB9XG5cbiAgJi0tbWVtYmVyLWltYWdlLFxuICAmLS1tZW1iZXItaW1hZ2UtYmFjayB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgJGdyYXktbGlnaHRlcjtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIGhlaWdodDogJG1lbWJlci13aWR0aDtcbiAgICB3aWR0aDogJG1lbWJlci13aWR0aDtcblxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG5cbiAgICB0cmFuc2l0aW9uOiAxcztcblxuICAgICYuaGFzLXNtYWxsLWltYWdlcyB7XG4gICAgICBoZWlnaHQ6ICRtZW1iZXItd2lkdGggKiAuODU7XG4gICAgICB3aWR0aDogJG1lbWJlci13aWR0aCAqIC44NTtcbiAgICB9XG5cbiAgICAmLmhhcy1yb3VuZGVkLWltYWdlcyB7XG4gICAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICAgIH1cbiAgfVxuXG4gICYtLW1lbWJlci1pbWFnZS1iYWNrIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XG4gIH1cblxuICAmLS1tZW1iZXItY29udGVudCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAwO1xuICAgIGxlZnQ6IDA7XG5cbiAgICBwYWRkaW5nOiAuNXZtaW4gMDtcblxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuXG4gICYtLW1lbWJlci1uYW1lIHtcbiAgICBjb2xvcjogJHRoZW1lLWNvbG9yO1xuICAgIGZvbnQtZmFtaWx5OiAnR2lic29uIFNlbWlCb2xkJztcbiAgICBmb250LXNpemU6IC44NXZtaW47XG4gIH1cblxuICAmLS1tZW1iZXItbWV0YSB7XG4gICAgZm9udC1zaXplOiAuNzV2bWluO1xuICB9XG59XG5cblxuXG4vKiBlbnRpcmUgY29udGFpbmVyLCBrZWVwcyBwZXJzcGVjdGl2ZSAqL1xuLmZsaXAtY29udGFpbmVyIHtcbiAgcGVyc3BlY3RpdmU6IDEwMDA7XG59XG4vKiBmbGlwIHRoZSBwYW5lIHdoZW4gaG92ZXJlZCAqL1xuLmZsaXAtY29udGFpbmVyLmFjdGl2ZSAuZmxpcHBlciB7XG4gIHRyYW5zZm9ybTogcm90YXRlWSgxODBkZWcpO1xufVxuXG4vKiBmbGlwIHNwZWVkIGdvZXMgaGVyZSAqL1xuLmZsaXBwZXIge1xuICB0cmFuc2l0aW9uOiAwLjZzO1xuICB0cmFuc2Zvcm0tc3R5bGU6IHByZXNlcnZlLTNkO1xuXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLyogaGlkZSBiYWNrIG9mIHBhbmUgZHVyaW5nIHN3YXAgKi9cbi5mcm9udCwgLmJhY2sge1xuICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG5cbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG59XG5cbi8qIGZyb250IHBhbmUsIHBsYWNlZCBhYm92ZSBiYWNrICovXG4uZnJvbnQge1xuICB6LWluZGV4OiAyO1xuICAvKiBmb3IgZmlyZWZveCAzMSAqL1xuICB0cmFuc2Zvcm06IHJvdGF0ZVkoMGRlZyk7XG59XG5cbi8qIGJhY2ssIGluaXRpYWxseSBoaWRkZW4gcGFuZSAqL1xuLmJhY2sge1xuICB0cmFuc2Zvcm06IHJvdGF0ZVkoMTgwZGVnKTtcbn1cbiIsIi50b2dnbGUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMS41dm1pbjtcbiAgcmlnaHQ6IDN2bWluO1xuICB6LWluZGV4OiA5OTtcblxuICBhIHtcbiAgICAmOmxpbmssXG4gICAgJjphY3RpdmUsXG4gICAgJjp2aXNpdGVkLFxuICAgICY6aG92ZXIge1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIH1cbiAgfVxuXG4gIGEgKyBhIHtcbiAgICBtYXJnaW4tbGVmdDogMXZtaW47XG4gIH1cblxuICAmLS1kaXJlY3Rpb24ge1xuICAgICY6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6IFwi4oaSIEhvcml6b250YWwgXCI7XG4gICAgfVxuXG4gICAgJi5oYXMtZGlyZWN0aW9uLWhvcml6b250YWwge1xuICAgICAgJjpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiBcIuKGkyBWZXJ0aWNhbCBcIjtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAmLS1pbWFnZS1zdHlsZSB7XG4gICAgJjpiZWZvcmUge1xuICAgICAgY29udGVudDogXCLil4sgUm91bmQgXCI7XG4gICAgfVxuXG4gICAgJi5oYXMtcm91bmRlZC1pbWFnZXMge1xuICAgICAgJjpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiBcIuKWoSBTcXVhcmUgXCI7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgJi0tc3BhY2luZyB7XG4gICAgJjpiZWZvcmUge1xuICAgICAgY29udGVudDogXCLilqAgU21hbGwgXCI7XG4gICAgfVxuXG4gICAgJi5oYXMtc21hbGwtaW1hZ2VzIHtcbiAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogXCLilqAgTGFyZ2UgXCI7XG4gICAgICB9XG4gICAgfVxuICB9XG59Il0sIm1hcHBpbmdzIjoiR0dVQSxJQUFJLENBQUUsSUFBSSxBQUFDLENBQ1QsVUFBVSxDQUFFLE1BQU8sQ0FDcEIsQUFFRCxJQUFJLEFBQUMsQ0FDSCxNQUFNLENBQUUsSUFBSyxDQUNkLEFBRUQsSUFBSSxBQUFDLENGNENKLE9BQU8sQ0FBRSxXQUFZLENBQ3JCLE9BQU8sQ0FBRSxZQUFhLENB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QUFNSCxlQUFlLEFBQUMsQ0FDZCxXQUFXLENBQUUsSUFBSyxDQUNuQixBQUVELGVBQWUsQUFBQSxPQUFPLENBQUMsUUFBUSxBQUFDLENBQzlCLFNBQVMsQ0FBRSxlQUFPLENBQ25CLEFBR0QsUUFBUSxBQUFDLENBQ1AsVUFBVSxDQUFFLElBQUssQ0FDakIsZUFBZSxDQUFFLFdBQVksQ0FFN0IsUUFBUSxDQUFFLFFBQVMsQ0FDcEIsQUFHRCxNQUFNLENBQUUsS0FBSyxBQUFDLENBQ1osbUJBQW1CLENBQUUsTUFBTyxDQUU1QixRQUFRLENBQUUsUUFBUyxDQUNuQixHQUFHLENBQUUsQ0FBRSxDQUNQLElBQUksQ0FBRSxDQUFFLENBQ1QsQUFHRCxNQUFNLEFBQUMsQ0FDTCxPQUFPLENBQUUsQ0FBRSxDQUVYLFNBQVMsQ0FBRSxhQUFPLENBQ25CLEFBR0QsS0FBSyxBQUFDLENBQ0osU0FBUyxDQUFFLGVBQU8sQ0FDbkIsQUM5TEQsT0FBTyxBQUFDLENBQ04sUUFBUSxDQUFFLFFBQVMsQ0FDbkIsR0FBRyxDQUFFLE9BQVEsQ0FDYixLQUFLLENBQUUsS0FBTSxDQUNiLE9BQU8sQ0FBRSxFQUFHLENBa0RiLEFBdERELE9BQU8sQ0FNTCxDQUFDLEFBQ0UsS0FBSyxDQVBWLE9BQU8sQ0FNTCxDQUFDLEFBRUUsT0FBTyxDQVJaLE9BQU8sQ0FNTCxDQUFDLEFBR0UsUUFBUSxDQVRiLE9BQU8sQ0FNTCxDQUFDLEFBSUUsTUFBTSxBQUFDLENBQ04sZUFBZSxDQUFFLElBQUssQ0FDdkIsQUFaTCxPQUFPLENBZUwsQ0FBQyxDQUFHLENBQUMsQUFBQyxDQUNKLFdBQVcsQ0FBRSxLQUFNLENBQ3BCLEFBakJILGtCQUFPLEFBb0JGLE9BQU8sQUFBQyxDQUNQLE9BQU8sQ0FBRSxpQkFBa0IsQ0FDNUIsQUF0Qkwsa0JBQU8sQUF3QkYseUJBQXlCLEFBQ3ZCLE9BQU8sQUFBQyxDQUNQLE9BQU8sQ0FBRSxlQUFnQixDQUMxQixBQTNCUCxvQkFBTyxBQWdDRixPQUFPLEFBQUMsQ0FDUCxPQUFPLENBQUUsWUFBYSxDQUN2QixBQWxDTCxvQkFBTyxBQW9DRixtQkFBbUIsQUFDakIsT0FBTyxBQUFDLENBQ1AsT0FBTyxDQUFFLGFBQWMsQ0FDeEIsQUF2Q1AsZ0JBQU8sQUE0Q0YsT0FBTyxBQUFDLENBQ1AsT0FBTyxDQUFFLFlBQWEsQ0FDdkIsQUE5Q0wsZ0JBQU8sQUFnREYsaUJBQWlCLEFBQ2YsT0FBTyxBQUFDLENBQ1AsT0FBTyxDQUFFLFlBQWEsQ0FDdkIiLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9 */
